{"filter":false,"title":"Torneo.java","tooltip":"/8888/Torneo.java","ace":{"folds":[],"scrolltop":180,"scrollleft":0,"selection":{"start":{"row":20,"column":52},"end":{"row":20,"column":52},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":11,"mode":"ace/mode/java","state":"start"},"cleansed":true},"hash":"51e6681cfae37c2a301634bf9a60c80e10fb7c1f","changed":true,"value":"import java.util.ArrayList;\n\npublic class Torneo {\n    \n    private ArrayList<Equipo> equipos;\n    \n    \n    public Torneo(){\n        equipos = new ArrayList<>();\n    }\n    \n    public void indicarResultados(String entrada) {\n        \n        String[] lineasEntrada = entrada.split(\"\\n\");\n        for(int i = 0; i < lineasEntrada.length; i++) {\n            String[] partesDeLaLinea = lineasEntrada[i].split(\";\");\n            String resultado = partesDeLaLinea[2];\n            \n            //Creamos un array donde en la primera posicion va\n            //el equipo local y en la segunda el visitante\n            Equipo[] equiposPartido = new Equipo[2];\n            for (int j = 0; j < equiposPartido.length; j++) {\n                String nombreEquipoActual = partesDeLaLinea[j];\n                equiposPartido[j] = devolverEquipo(nombreEquipoActual);\n                if (equiposPartido[j] == null){ \n                    equiposPartido[j] = new Equipo(nombreEquipoActual);\n                    equipos.add(equiposPartido[j]);\n                }\n            }\n            \n            switch (resultado) {\n                case \"gana\": \n                    equiposPartido[0].ganarPartido();\n                    equiposPartido[1].perderPartido();\n                    break;\n                case \"empata\": \n                    equiposPartido[0].empatarPartido();\n                    equiposPartido[1].empatarPartido();\n                    break;\n                case \"pierde\": \n                    equiposPartido[0].perderPartido();\n                    equiposPartido[1].ganarPartido();\n                    break;\n            } \n        }\n    }\n    \n    \n    public String mostrarClasificacion() {\n        \n        String aDevolver = \"Equipo                         |  J |  G |  E |  P |  P\\n\";\n        \n        //Ordenamos alfabÃ©ticamente...\n        for (int i = 0;i<equipos.size() - 1;i++){\n            int posicionMaxima = i;\n            String nombreEquipoMaximo = equipos.get(i).getNombre();\n            for(int j =  i + 1; j < equipos.size(); j++ ){\n                String nombreEquipoAComparar = equipos.get(j).getNombre();\n                if (nombreEquipoMaximo.compareToIgnoreCase(nombreEquipoAComparar) < 0){\n                    posicionMaxima = j;\n                    nombreEquipoMaximo = nombreEquipoAComparar;\n                }\n            }\n            \n            Equipo auxiliar = equipos.get(i);\n            equipos.set(i,equipos.get(posicionMaxima));\n            equipos.set(posicionMaxima, auxiliar);\n        } \n        \n        //Ordenamos por puntos\n        for (int i = 0;i<equipos.size() - 1;i++){\n            int posicionMaxima = i;\n            int puntosEquipoMaximo = equipos.get(i).getPuntos();\n            for(int j =  i + 1; j < equipos.size(); j++ ){\n                int puntosEquipoAComparar = equipos.get(j).getPuntos();\n                if (puntosEquipoMaximo < puntosEquipoAComparar){\n                    posicionMaxima = j;\n                    puntosEquipoMaximo = puntosEquipoAComparar;\n                }\n            }\n            \n            Equipo auxiliar = equipos.get(i);\n            equipos.set(i,equipos.get(posicionMaxima));\n            equipos.set(posicionMaxima, auxiliar);\n        }\n        \n        for(int k = 0; k< equipos.size() ; k++) {\n            aDevolver += equipos.get(k) + \"\\n\";\n        }\n        \n        \n        return aDevolver;\n       \n       \n        \n    }\n    \n    \n    \n    private Equipo devolverEquipo(String nombreEquipo)\n    {\n        Equipo aDevolver = null;\n        int contador = 0;\n        while(aDevolver == null){\n            if (equipos.get(contador).getNombre().equals(nombreEquipo)){\n                aDevolver = equipos.get(contador);\n            }\n            contador++;\n        }\n        \n        return aDevolver;\n    }\n    \n}","undoManager":{"mark":-1,"position":-1,"stack":[]},"timestamp":1527074156802}